name: CI
on:
  workflow_dispatch:
  push:
    branches: main
    paths-ignore:
      - 'microsite/**'
      - '.github/workflows/deploy-microsite.yml'
  pull_request:
    branches: [trunk]
    types: [closed]
    paths-ignore:
      - 'microsite/**'
      - '.github/workflows/deploy-microsite.yml'
# concurrency: ${{ github.workflow || github.run_id }}
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - uses: actions/checkout@v2
      # Beginning of yarn setup, keep in sync between all workflows, see ci.yml
      - name: use node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/ # Needed for auth
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache global yarn cache
        uses: actions/cache@v2
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable
      # End of yarn setup
      # - name: build type declarations
      #   run: yarn tsc:full
      - name: build packages
        # uses the react-scripts build and tsc build for client
        run: |
          yarn lerna run start-with-mock-data
          cd packages/api
          chmod +x ./create_server_env_file.sh
          ./create_server_env_file.sh
          cd ../..
          cd packages/client
          chmod +x ./create_client_env_file.sh
          ./create_client_env_file.sh
          yarn build:app
          cd ../..

      - uses: azure/docker-login@v1
        with:
          login-server: 'cloudcarbon.azurecr.io'
          username: cloudcarbon
          password: WzWWDh3So3RUQ/gpPjkWFgrhqw9kA8JlWjjlWKXxqm+ACRD3q2IQ
        name: Login to azure DockerHub

      - name: Build and push client to Azure Container registry
        run: |
          docker build ./packages/client -t cloudcarbon.azurecr.io/cloudcarboncalculator/client:${{ github.sha }}
          docker push cloudcarbon.azurecr.io/cloudcarboncalculator/client:${{ github.sha }}

      - name: Build and push api to Azure Container registry
        run: |
          docker build ./packages/api -t cloudcarbon.azurecr.io/cloudcarboncalculator/api:${{ github.sha }}
          docker push cloudcarbon.azurecr.io/cloudcarboncalculator/api:${{ github.sha }}

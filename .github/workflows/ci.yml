name: CI
on:
  workflow_dispatch:
  push:
    branches: [trunk]
    paths-ignore:
      - 'microsite/**'
      - '.github/workflows/deploy-microsite.yml'
  pull_request:
    branches: [trunk]
    types: [closed]
    paths-ignore:
      - 'microsite/**'
      - '.github/workflows/deploy-microsite.yml'
# concurrency: ${{ github.workflow || github.run_id }}
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - uses: actions/checkout@v2
      # Beginning of yarn setup, keep in sync between all workflows, see ci.yml
      - name: use node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/ # Needed for auth
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache global yarn cache
        uses: actions/cache@v2
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable
      # End of yarn setup
      # - name: build type declarations
      #   run: yarn tsc:full
      - name: build packages
        # uses the react-scripts build and tsc build for client
        run: |
          yarn lerna run build
          cd packages/client
          chmod +x create_client_env_file.sh
          ./create_client_env_file.sh
          yarn build:app
          cd ../..
      # # Publishes current version of packages that are not already present in the registry
      # - name: publish
      #   if: github.event.pull_request.head.ref == 'changeset-release/trunk'
      #   run: yarn lerna publish from-package --yes
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # # Creates the next available tag with format "release-<year>-<month>-<day>[.<n>]"
      # - name: Create a release tag
      #   if: github.event.pull_request.head.ref == 'changeset-release/trunk'
      #   id: create_tag
      #   run: node scripts/create-release-tag.js
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # # Creates and updates the next available tag with format "latest"
      # - name: Create latest release tag
      #   if: github.event.pull_request.head.ref == 'changeset-release/trunk'
      #   id: create_latest_tag
      #   uses: EndBug/latest-tag@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Convert the newly created tag into a release with changelog information
      # - name: Create release on GitHub
      #   if: github.event.pull_request.head.ref == 'changeset-release/trunk'
      #   run: node scripts/create-github-release.js ${{ steps.create_tag.outputs.tag_name }} 1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: azure/docker-login@v1
        with:
          login-server: 'azure/docker-login@v1'
          username: cloudcarbon
          password: WzWWDh3So3RUQ/gpPjkWFgrhqw9kA8JlWjjlWKXxqm+ACRD3q2IQ
        name: Login to azure DockerHub

      - name: Build and push client to Docker Hub
        if: github.event.pull_request.head.ref == 'changeset-release/trunk'
        uses: docker/build-push-action@v2
        with:
          context: packages/client
          push: true
          tags: |
            cloudcarboncalculator/client:${{ steps.create_tag.outputs.tag_name }}
            cloudcarboncalculator/client:latest
      - name: Build and push api to Docker Hub
        if: github.event.pull_request.head.ref == 'changeset-release/trunk'
        uses: docker/build-push-action@v2
        with:
          context: packages/api
          push: true
          tags: |
            cloudcarboncalculator/api:${{ steps.create_tag.outputs.tag_name }}
            cloudcarboncalculator/api:latest
